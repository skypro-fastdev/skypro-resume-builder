function PhotoSection(store) {

    return {

        $template: `
        
            <h3>–§–æ—Ç–æ</h3>
            
            <div v-if="!model.hh_photo_medium" class="alert alert-warning">–§–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ. –ë–µ–∑ –Ω–µ–≥–æ ‚Äì –Ω–µ–ª—å–∑—è</div>
            
            <div v-if="model.hh_access_token">
                <div class="alert alert-info text-muted mt-3">
                  <small>–ù–∞ —Ñ–æ—Ç–æ —Ä–µ–∑—é–º–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–æ –ª–∏—Ü–æ. –°–Ω–∏–º–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–º, –ø—Ä–∏ —ç—Ç–æ–º –ª–µ–≥–∫–∏–º –∏ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω—ã–º. </small>
                </div>
               
                <input type="file" ref="fileInput" class="form-control" >     
                <button v-if="store.sections.photo=='ready'" @click="upload()" class="btn btn-dark mt-3" >üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å</button>
                <button v-if="store.sections.photo=='loading'"  class="btn btn-dark mt-2" disabled>–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞</button>
            </div>
            
            <div v-if="!model.hh_access_token">
                <div class="alert alert-info text-muted mt-3">
                  <small>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –Ω–∞ HH.ru —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</small>
                </div>
            </div>            
            
        `,

        upload() {

            const file = this.$refs.fileInput.files[0];

            if (!file) {
                alert("–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏");
                return
            }
            if (!this.isFileExtensionOk()) {
                alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ jpeg / png");
                return
            }

            store.setStatus("photo", "loading")

            const formData = new FormData();
            formData.append('file', file);
            formData.append('hh_access_token', this.model.hh_access_token)

            const upload_photo_url = UPLOADBASEURL + this.model.student_id

            axios.post(upload_photo_url, formData, {headers: {'Content-Type': 'multipart/form-data'}})

                .then(response => {
                    console.log(response.data); // Handle successful upload response

                    this.model.hh_photo_id = response.data["id"]
                    this.model.hh_photo_small = response.data["small"]
                    this.model.hh_photo_medium = response.data["medium"]
                    store.setStatus("photo", "ready")
                    // –ü–∏—à–µ–º –≤ –æ—Ç—á–µ—Ç
                    this.report("PHOTO UPLOADED",response.data)

                })
                .catch(error => {
                    const responseData = error.response
                    console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ${error}`)
                    console.log(responseData)
                    store.setStatus("photo", "ready")
                    alert(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${JSON.stringify(responseData)}`)
                    this.report("PHOTO ERROR", responseData)
                });

        },

        isFileExtensionOk() {

            const file = this.$refs.fileInput.files[0];
            const fileName = file.name.toLowerCase();
            const fileExt = fileName.split('.').pop();
            return ["jpeg", "jpg", "png"].includes(fileExt)

        }


    }

}